#include <iostream>
#include "C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\Data\\Joc.h"
#include "C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\Data\\Oferta.h"
#include <fstream>
#include <string.h>
#include "string"
#include "list"
#include <vector>
using namespace std;

void citire()
{
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        int nrJocuri;
        fin>>nrJocuri;
       for(int i=0;i<nrJocuri;i++)
        {
            int id, nrC;
            string denumire;
            double pret, memorie;
            fin>>id;
            fin.ignore();
            getline(fin,denumire);
            fin>>pret>>nrC>>memorie;
            Joc j1(id,denumire,pret,nrC,memorie);
            cout<<j1;
            cout<<endl<<endl;
        }
}
void adaugareJoc(char*argv[],int args)
{
    //cout<<args;
        if(args!=7)
            cout<<"Sintaxa invalida! Sintaxa corecta: <adaugare_joc> id(int) Nume Joc(string) pret(double) Nr Cumparari(int) memorie(double)";
        else
    {
        list<Joc*>l;
        int ok=1;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        int nrJocuri;
        fin>>nrJocuri;
       for(int i=0;i<nrJocuri;i++)
        {
            int id, nrC;
            string denumire;
            double pret, memorie;
            fin>>id;
            if(id==stoi(argv[2]))
                ok=0;
            fin.ignore();
            getline(fin,denumire);
            fin>>pret>>nrC>>memorie;
            Joc j1(id,denumire,pret,nrC,memorie);
            l.push_back(new Joc(j1));
        }
        if(ok==1)
        {nrJocuri++;
        Joc j(stoi(argv[2]),argv[3], stod(argv[4]),stoi(argv[5]), stod(argv[6]));
        l.push_back(new Joc(j));
        cout<<"Produsul a fost adaugat deja in magazin";
        }
        else cout<<"Deja exista un produs cu acest id!";

        ofstream fout("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");//scrierea in fisier
        fout<<nrJocuri;
        fout<<"\n";
        list<Joc*>::iterator it;
        for(it=l.begin();it!=l.end();it++)
          {fout<<**it;fout<<'\n';}

    }
}
void stergeJoc(char*argv[], int args)
{
    if(args!=3)
        cout<<"Sintaxa invalida! Sintaxa corecta: <stergere_joc> id(int)";
    else{
    list<Joc*>l;
        int id = stoi(argv[2]);
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        int nrJocuri;
        fin>>nrJocuri;
       for(int i=0;i<nrJocuri;i++)//punere in lista a elementelor
        {
            int id, nrC;
            string denumire;
            double pret, memorie;
            fin>>id;
            fin.ignore();
            getline(fin,denumire);
            fin>>pret>>nrC>>memorie;
            Joc j1(id,denumire,pret,nrC,memorie);
            l.push_back(new Joc(j1));
        }
        ofstream fout("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        fout<<--nrJocuri;
        fout<<"\n";
        int ok=1;
        list<Joc*>::iterator it;
        for(it=l.begin();it!=l.end();it++)///stergere element(daca are id pe care il dorim ssa il stergem nu il mai adaugam in fisir)
          {
              Joc *j1=*it;
              if(j1->getId()!=id)
              {fout<<**it;fout<<'\n';}
              else{ok=0;}
          }
        if(ok==0)
            cout<<"Jocul a fost sters";
        else cout<<"Jocul nu exista";
    }
}

void modificareJoc(char *argv[], int args){
if(args!=4)
    cout<<"Sintaxa invalida! Sintaxa corecta: <modificare_joc> id(int) pret(double)";
else{

    int idA=stoi(argv[2]);
    double pretA=stod(argv[3]);
     list<Joc*>l;
        int ok=1;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        int nrJocuri;
        fin>>nrJocuri;
       for(int i=0;i<nrJocuri;i++)
        {
            int id, nrC;
            string denumire;
            double pret, memorie;
            fin>>id;
            fin.ignore();
            getline(fin,denumire);
            fin>>pret>>nrC>>memorie;
            if(id==idA)
                {pret=pretA;ok=0;}
            Joc j1(id,denumire,pret,nrC,memorie);
            l.push_back(new Joc(j1));
        }
        ofstream fout("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");//scrierea in fisier
        fout<<nrJocuri;
        fout<<"\n";
        list<Joc*>::iterator it;
        for(it=l.begin();it!=l.end();it++)
          {fout<<**it;fout<<'\n';}
        if(ok==0)cout<<"Pretul produsului a fost modificat";
        else cout<<"Nu s-a gasit produsul respectiv";
}
}
Oferta** vizualizareOferte(int ok)
{
        Oferta**o;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");
        int nrOferte;
        fin>>nrOferte;
        o=new Oferta*[nrOferte];
        for(int i=0;i<nrOferte;i++)
        {
            if(ok!=1)
            cout<<"OFERTA "<<(i+1)<<"\n";
            int id, nrJ;
            double pret;
            fin>>id;
            fin>>pret;
            fin>>nrJ;
            o[i]= new Oferta(id,pret,nrJ);
            o[i]->memorie(nrJ);
            for(int j=0;j<nrJ;j++)
            {

                int id, nrC;
                string denumire;
                double pret, memorie;
                fin>>id;
                fin.ignore();
                getline(fin,denumire);
                fin>>pret>>nrC>>memorie;
                Joc *j1= new Joc(id,denumire,pret,nrC,memorie);
                //->afisare();
                o[i]->adaugaJoc(j1,j);

            }
            if(ok!=1)
            {o[i]->afisare();
            cout<<endl;}
        }
    if(ok==1)
        return o;
}
void adaugaOferta(char*argv[], int argc)
{
    if(argc<5)
        cout<<"Sintaxa invlida! Sintaxa corecta: <adaugare_oferta> id(int) pret(double) nrJocuri(int) nrJocuri*(idJoc(int) Nume Joc(string) pret(double) Nr Cumparari(int) memorie(double))";
    else if(argc>=5&& stoi(argv[4])*5+5!=argc){cout<<"Sintaxa invalida! Sintaxa corecta: <adaugare_oferta> id(int) pret(double) nrJocuri(int) nrJocuri*(idJoc(int) Nume Joc(string) pret(double) Nr Cumparari(int) memorie(double))";
    }
    else{
    ifstream fin1("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");
        int nrOferte;
        fin1>>nrOferte;
    int ok=0;
    Oferta**o=vizualizareOferte(1);
    for(int i=0;i<nrOferte;i++)
        {
            int x=o[i]->getId();
            if(x==stoi(argv[2]))
            {

                ok=1;

            }
        }
    if(ok==1)cout<<"Aceasta oferta exista deja";
       if(ok==0)
       {
        Oferta**o;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");
        int nrOferte;
        fin>>nrOferte;
         nrOferte++;
         o=new Oferta*[nrOferte];
          for(int i=0;i<nrOferte-1;i++)
            {
                int id, nrJ;
                double pret;
                fin>>id;
                fin>>pret;
                fin>>nrJ;
                o[i]= new Oferta(id,pret,nrJ);
                o[i]->memorie(nrJ);
                for(int j=0;j<nrJ;j++)
                {

                    int id, nrC;
                    string denumire;
                    double pret, memorie;
                    fin>>id;
                    fin.ignore();
                    getline(fin,denumire);
                    fin>>pret>>nrC>>memorie;
                    Joc *j1= new Joc(id,denumire,pret,nrC,memorie);

                    o[i]->adaugaJoc(j1,j);
                }
            }

            o[nrOferte-1]=new Oferta(stoi(argv[2]),stod(argv[3]),stoi(argv[4]));
            int nrJocuriOfNoua=stoi(argv[4]);
            o[nrOferte-1]->memorie(nrJocuriOfNoua);
             for(int i=0;i<nrJocuriOfNoua;i++)
                { //Joc j(stoi(argv[5]),argv[6], stod(argv[7]),stoi(argv[8]), stod(argv[9]));
                Joc j(stoi(argv[5+i*5]),argv[i*5+6], stod(argv[5*i+7]),stoi(argv[5*i+8]), stod(argv[5*i+9]));
                Joc *j1= new Joc(j);
                o[nrOferte-1]->adaugaJoc(j1,i);
               }
         //Joc j(stoi(argv[2]),argv[3], stod(argv[4]),stoi(argv[5]), stod(argv[6]));
          ofstream fout("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");//scrierea in fisier
          fout<<nrOferte<<"\n";
         for(int i=0;i<nrOferte;i++)
            {
                fout<<o[i]->getId();
                fout<<"\n";
                fout<<o[i]->getPret();
                fout<<"\n";
                fout<<o[i]->getNrj();
                fout<<"\n";
                for(int j=0;j<o[i]->getNrj();j++)
                    {fout<<*(o[i]->getJoc(j));
                fout<<"\n";}
            }
        cout<<"Aceasta oferta a fost adaugata";
       }
    }
}
void stergereOferta(char*argv[], int args)
{
    if(args!=3)
        cout<<"Sintaxa invalida! Sintaxa corecta: <stergere_oferta> id(int)";
    else{
    ifstream fin1("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");
        int nrOferte;
        fin1>>nrOferte;
    int ok=0;
    Oferta**o=vizualizareOferte(1);
    for(int i=0;i<nrOferte;i++)
        {
            int x=o[i]->getId();
            if(x==stoi(argv[2]))
                ok=1;
        }
    if(ok==0)
        cout<<"Aceasta oferta nu exista";
    else
       if(ok==1)
       {
        Oferta**o;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");
        int nrOferte;
        fin>>nrOferte;
         o=new Oferta*[nrOferte];
          for(int i=0;i<nrOferte;i++)
            {
                int id, nrJ;
                double pret;
                fin>>id;
                fin>>pret;
                fin>>nrJ;
                o[i]= new Oferta(id,pret,nrJ);
                o[i]->memorie(nrJ);
                for(int j=0;j<nrJ;j++)
                {
                    int idj, nrC;
                    string denumire;
                    double pret, memorie;
                    fin>>idj;
                    fin.ignore();
                    getline(fin,denumire);
                    fin>>pret>>nrC>>memorie;
                    Joc *j1= new Joc(idj,denumire,pret,nrC,memorie);
                    o[i]->adaugaJoc(j1,j);
                }
            }
        for(int i=0;i<nrOferte;i++)

            {   ofstream fout("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\oferte.txt");//scrierea in fisier
              fout<<nrOferte-1<<"\n";
              int ids=stoi(argv[2]);
             for(int i=0;i<nrOferte;i++)
                {
                        if(ids!=o[i]->getId())
                        {fout<<o[i]->getId();
                        fout<<"\n";
                        fout<<o[i]->getPret();
                        fout<<"\n";
                        fout<<o[i]->getNrj();
                        fout<<"\n";
                        for(int j=0;j<o[i]->getNrj();j++)
                            fout<<*(o[i]->getJoc(j));
                        }

                }

            }
        cout<<"Aceasta oferta a fost stearsa";
       }
    }
}

void maximCumpJoc(char*argv[])
{
    int nrc=-1;
     vector<Joc*>l;
        int ok=1;
        ifstream fin("C:\\Users\\Raluca\\OneDrive\\Desktop\\fac\\ProJoc\\Shared\\files\\produse.txt");
        int nrJocuri;
        fin>>nrJocuri;
       for(int i=0;i<nrJocuri;i++)
        {
            int id, nrC;
            string denumire;
            double pret, memorie;
            fin>>id;
            fin.ignore();
            getline(fin,denumire);
            fin>>pret>>nrC>>memorie;
            if(nrC>nrc)
                nrc=nrC;
            Joc j1(id,denumire,pret,nrC,memorie);
            l.push_back(new Joc(j1));
        }
    for(int i=0;i<l.size();i++)
          {
              if(l[i]->getNrC()==nrc)
              {
                 // cout<<"OK";
                  l[i]->afisareJ();cout<<'\n';
            }
        }
}

int main(int argc, char*argv[])
{

    if(strcmp(argv[1],"vizualizare_jocuri")==0)
    {
        citire();
    }
   else if(strcmp(argv[1],"adaugare_joc")==0)
    {
        adaugareJoc(argv, argc);
    }
    else if(strcmp(argv[1],"stergere_joc")==0)
    {
        stergeJoc(argv,argc);
    }
    else if(strcmp(argv[1],"modificare_joc")==0)
    {
        modificareJoc(argv,argc);
    }
    else if(strcmp(argv[1],"vizualizare_oferte")==0)
    {
        vizualizareOferte(0);
    }
     else if(strcmp(argv[1],"adaugare_oferta")==0)
    {
        adaugaOferta(argv,argc);
    }
    else if(strcmp(argv[1],"stergere_oferta")==0)
    {
        stergereOferta(argv,argc);
    }
    else if(strcmp(argv[1],"viz_cele_mai_cump_jocuri")==0)
    {
        maximCumpJoc(argv);
    }

    return 0;
}
